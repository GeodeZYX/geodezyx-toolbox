[tool.bumpversion]
current_version = "4.5.1"
#parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
#serialize = ["{major}.{minor}.{patch}"]
#parse = """(?x)
#    (?P<major>0|[1-9]\\d*)\\.
#    (?P<minor>0|[1-9]\\d*)\\.
#    (?P<patch>0|[1-9]\\d*)
#    (?:
#        -                             # dash separator for pre-release section
#        (?P<pre_l>[a-zA-Z-]+)         # pre-release label
#        (?P<pre_n>0|[1-9]\\d*)        # pre-release version number
#    )?                                # pre-release section is optional
#"""
#serialize = [
#    "{major}.{minor}.{patch}-{pre_l}{pre_n}",
#    "{major}.{minor}.{patch}",
#]
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        -                             # dash separator for pre-release section
        (?P<pre_l>[a-zA-Z-]+)         # pre-release label
        (?:0|[1-9]\\d*)               # pre-release version number
    )?                                # pre-release section is optional
"""

serialize = [
    "{major}.{minor}.{patch}-{pre_l}{distance_to_latest_tag}",
    "{major}.{minor}.{patch}",
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = true
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = "y"
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[tool.bumpversion.parts.pre_l]
values = ["dev", "rc", "final"]
optional_value = "final"


[[tool.bumpversion.files]]
filename = "geodezyx/__init__.py"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"

[[tool.bumpversion.files]]
filename = "README.md"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "Version {current_version}"
replace = "Version {new_version}"

[[tool.bumpversion.files]]
filename = "setup.py"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "version='{current_version}'"
replace = "version='{new_version}'"
